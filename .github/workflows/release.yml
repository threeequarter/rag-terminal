name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Get version
        id: version
        run: |
          # Generate version from git
          VERSION="v$(date +%Y.%m.%d)-$(git rev-parse --short HEAD)"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Build binaries
        run: |
          # Create dist directory
          mkdir -p dist

          # Build for all platforms
          platforms=(
            "windows/amd64"
            "windows/arm64"
            "linux/amd64"
            "linux/arm64"
            "darwin/amd64"
            "darwin/arm64"
          )

          for platform in "${platforms[@]}"; do
            IFS='/' read -r os arch <<< "$platform"

            output_name="rag-terminal-${os}-${arch}"
            if [ "$os" = "windows" ]; then
              output_name="${output_name}.exe"
            fi

            echo "Building for $os/$arch..."
            GOOS=$os GOARCH=$arch go build \
              -ldflags="-s -w -X 'main.Version=${{ steps.version.outputs.version }}'" \
              -o "dist/${output_name}" \
              .

            # Create archives
            if [ "$os" = "windows" ]; then
              cd dist
              zip "rag-terminal-${os}-${arch}.zip" "${output_name}"
              cd ..
            else
              tar -czf "dist/rag-terminal-${os}-${arch}.tar.gz" -C dist "${output_name}"
            fi
          done

      - name: Generate checksums
        run: |
          cd dist
          sha256sum rag-terminal-*.{zip,tar.gz} > checksums.txt
          cat checksums.txt

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          body: |
            ## RAG Terminal ${{ steps.version.outputs.version }}

            ### Downloads

            **Windows**
            - [Windows AMD64](https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/rag-terminal-windows-amd64.zip)
            - [Windows ARM64](https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/rag-terminal-windows-arm64.zip)

            **Linux**
            - [Linux AMD64](https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/rag-terminal-linux-amd64.tar.gz)
            - [Linux ARM64](https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/rag-terminal-linux-arm64.tar.gz)

            **macOS**
            - [macOS AMD64 (Intel)](https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/rag-terminal-darwin-amd64.tar.gz)
            - [macOS ARM64 (Apple Silicon)](https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/rag-terminal-darwin-arm64.tar.gz)

            ### Checksums
            See [checksums.txt](https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/checksums.txt)

            ### Changes
            Commit: ${{ github.sha }}

      - name: Upload Windows AMD64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/rag-terminal-windows-amd64.zip
          asset_name: rag-terminal-windows-amd64.zip
          asset_content_type: application/zip

      - name: Upload Windows ARM64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/rag-terminal-windows-arm64.zip
          asset_name: rag-terminal-windows-arm64.zip
          asset_content_type: application/zip

      - name: Upload Linux AMD64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/rag-terminal-linux-amd64.tar.gz
          asset_name: rag-terminal-linux-amd64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Linux ARM64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/rag-terminal-linux-arm64.tar.gz
          asset_name: rag-terminal-linux-arm64.tar.gz
          asset_content_type: application/gzip

      - name: Upload macOS AMD64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/rag-terminal-darwin-amd64.tar.gz
          asset_name: rag-terminal-darwin-amd64.tar.gz
          asset_content_type: application/gzip

      - name: Upload macOS ARM64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/rag-terminal-darwin-arm64.tar.gz
          asset_name: rag-terminal-darwin-arm64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Checksums
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/checksums.txt
          asset_name: checksums.txt
          asset_content_type: text/plain
