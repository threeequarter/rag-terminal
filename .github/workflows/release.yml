name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.goos }}-${{ matrix.goarch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux builds
          - goos: linux
            goarch: amd64
            os: ubuntu-latest
          - goos: linux
            goarch: arm64
            os: ubuntu-latest

          # macOS builds
          - goos: darwin
            goarch: amd64
            os: macos-latest
          - goos: darwin
            goarch: arm64
            os: macos-latest

          # Windows builds
          - goos: windows
            goarch: amd64
            os: windows-latest
          - goos: windows
            goarch: arm64
            os: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.3'

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          go build -v -o rag-terminal-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }} .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rag-terminal-${{ matrix.goos }}-${{ matrix.goarch }}
          path: rag-terminal-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: List downloaded files
        run: |
          ls -lh artifacts/

      - name: Generate release tag
        id: tag
        run: |
          echo "tag=release-$(date +'%Y%m%d-%H%M%S')-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Create Draft Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag.outputs.tag }}
          name: ${{ steps.tag.outputs.tag }}
          artifacts: "artifacts/*"
          artifactErrorsFailBuild: true
          draft: true
          prerelease: false
          generateReleaseNotes: false
          body: 'Automated release from commit ${{ github.sha }}'
          allowUpdates: true
          removeArtifacts: true

      - name: Publish Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag.outputs.tag }}
          allowUpdates: true
          draft: false
          updateOnlyUnreleased: true
          omitBody: true
          omitName: true
